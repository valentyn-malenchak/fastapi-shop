name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

env:
  APP_ENVIRONMENT: ${{ secrets.APP_ENVIRONMENT }}
  MONGODB_USER: ${{ secrets.MONGODB_USER }}
  MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  MONGODB_HOST: ${{ secrets.MONGODB_HOST }}
  MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
  MONGODB_NAME: ${{ secrets.MONGODB_NAME }}
  AUTH_SECRET_KEY: ${{ secrets.AUTH_SECRET_KEY }}
  AUTH_REFRESH_SECRET_KEY: ${{ secrets.AUTH_REFRESH_SECRET_KEY }}

jobs:

  code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry==1.5.1

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: poetry

      - name: Install Python dependencies
        run: poetry install --no-root

      - name: Run Code Formatting
        run: poetry run invoke format

      - name: Run Linting
        run: poetry run invoke lint

      - name: Run Mypy
        run: poetry run invoke mypy

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: 7.0.1
          mongodb-db: $MONGODB_NAME
          mongodb-replica-set: rs0
        env:
          CI: true
          MONGODB_NAME: ${{ secrets.MONGODB_NAME }}

      - name: Run Tests
        run: poetry run invoke test
        env:
          CI: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          CI: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
